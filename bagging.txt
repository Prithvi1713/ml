from sklearn import datasets
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import BaggingClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# 1. Load the Iris dataset
iris = datasets.load_iris()
X = iris.data  # Features (sepal length, sepal width, petal length, petal width)
y = iris.target  # Labels (species)

# 2. Split the dataset into training and testing sets (80% training, 20% testing)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 3. Initialize the Decision Tree Classifier (base model)
base_model = DecisionTreeClassifier(random_state=42)

# 4. Initialize the Bagging Classifier with the base model (Decision Tree)
# NOTE: Use `estimator` instead of `base_estimator` to avoid the FutureWarning
bagging_model = BaggingClassifier(estimator=base_model, n_estimators=50, random_state=42)

# 5. Train the Bagging model on the training data
bagging_model.fit(X_train, y_train)

# 6. Make predictions on the test set
y_pred = bagging_model.predict(X_test)

# 7. Evaluate the model's accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy of the Bagging model: {accuracy:.4f}")
