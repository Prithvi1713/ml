import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
# Load the dataset
url = 'C:/Users/Admin/Downloads/Telegram Desktop/salary.csv'
data = pd.read_csv(url)
# Separate features and target variable
X = data[['YearsExperience']]  # Independent variable (2D array)
y = data['Salary']             # Dependent variable

# Split data into training and testing sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Build and train the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict salaries for the training and testing sets
y_train_pred = model.predict(X_train)
y_test_pred = model.predict(X_test)

# Plot scatter plot with regression line for training data
plt.scatter(X_train, y_train, color='blue', label='Training Data')
plt.plot(X_train, y_train_pred, color='red', label='Regression Line')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.title('Training Data: Salary vs. Experience')
plt.legend()
plt.show()

# Plot scatter plot with regression line for testing data
plt.scatter(X_test, y_test, color='green', label='Testing Data')
plt.plot(X_test, y_test_pred, color='red', label='Regression Line')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.title('Testing Data: Salary vs. Experience')
plt.legend()
plt.show()

# Calculate predicted salaries for the entire dataset
y_pred = model.predict(X)

# Display predicted salaries
print("Predicted salaries for the entire dataset:")
print(y_pred)
