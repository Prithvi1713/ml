# Import necessary libraries
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
from sklearn.tree import export_graphviz
import graphviz

# Load the dataset
df = pd.read_csv('Iris.csv')

# Data exploration
print(df.info())
print(df.describe())

# Visualize feature distributions using histograms
df.drop('Id', axis=1).hist(bins=20, figsize=(10, 7))
plt.tight_layout()
plt.show()

# Boxplot to check distribution and outliers
sns.boxplot(data=df.drop('Id', axis=1))
plt.title('Boxplot of Features')
plt.show()

# Define features (X) and target (y)
X = df.drop(columns=['Species', 'Id'])
y = df['Species']

# Split the dataset into 80% training and 20% testing
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train the Decision Tree model
dt_model = DecisionTreeClassifier(random_state=42)
dt_model.fit(X_train, y_train)

# Evaluate accuracy on test data
y_pred = dt_model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f'Accuracy of the Decision Tree Classifier: {accuracy:.2f}')

# Visualize the Decision Tree
dot_data = export_graphviz(dt_model, out_file=None,
                           feature_names=X.columns,
                           class_names=y.unique(),
                           filled=True, rounded=True,
                           special_characters=True)
graph = graphviz.Source(dot_data)
graph.render("decision_tree")  # Save the tree as a PDF
graph.view()  # Open the tree visualization
